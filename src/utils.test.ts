import { dataToTableState, groupBy, updateTableState } from "./utils";

const data = [
  [35473, 2529],
  [35474, 10029],
  [35475, 1599],
  [35479, 1200],
  [35479.5, 5288],
  [35480.5, 3458],
  [35481, 7846],
  [35481.5, 5000],
  [35482, 450],
  [35482.5, 978],
  [35483, 3551],
  [35484, 3383],
  [35484.5, 10000],
  [35485, 2011],
  [35485.5, 1041],
  [35486.5, 158689],
  [35487, 11681],
  [35487.5, 57176],
  [35489, 3508],
  [35489.5, 30000],
  [35490, 20000],
  [35492.5, 1990],
  [35493, 2501],
  [35493.5, 9979],
  [35496, 4455],
];

describe("utils.ts tests", () => {
  describe("groupBy()", () => {
    it.each([
      [[[], 1], []],
      [
        [data, 1],
        [
          [35473, 2529],
          [35474, 10029],
          [35475, 1599],
          [35479, 6488],
          [35480, 3458],
          [35481, 12846],
          [35482, 1428],
          [35483, 3551],
          [35484, 13383],
          [35485, 3052],
          [35486, 158689],
          [35487, 68857],
          [35489, 33508],
          [35490, 20000],
          [35492, 1990],
          [35493, 12480],
          [35496, 4455],
        ],
      ],
    ])("is grouping values correctly", (input, expected) => {
      // @ts-ignore
      expect(groupBy(...input)).toStrictEqual(expected);
    });
  });

  describe("dataToTableState()", () => {
    it.each([
      [[[]], []],
      [[[], false], []],
      [
        [data],
        [
          {
            col1: "2529",
            col2: "2529",
            col3: "35473",
          },
          {
            col1: "12558",
            col2: "10029",
            col3: "35474",
          },
          {
            col1: "14157",
            col2: "1599",
            col3: "35475",
          },
          {
            col1: "15357",
            col2: "1200",
            col3: "35479",
          },
          {
            col1: "20645",
            col2: "5288",
            col3: "35479.5",
          },
          {
            col1: "24103",
            col2: "3458",
            col3: "35480.5",
          },
          {
            col1: "31949",
            col2: "7846",
            col3: "35481",
          },
          {
            col1: "36949",
            col2: "5000",
            col3: "35481.5",
          },
          {
            col1: "37399",
            col2: "450",
            col3: "35482",
          },
          {
            col1: "38377",
            col2: "978",
            col3: "35482.5",
          },
          {
            col1: "41928",
            col2: "3551",
            col3: "35483",
          },
          {
            col1: "45311",
            col2: "3383",
            col3: "35484",
          },
          {
            col1: "55311",
            col2: "10000",
            col3: "35484.5",
          },
          {
            col1: "57322",
            col2: "2011",
            col3: "35485",
          },
          {
            col1: "58363",
            col2: "1041",
            col3: "35485.5",
          },
          {
            col1: "217052",
            col2: "158689",
            col3: "35486.5",
          },
          {
            col1: "228733",
            col2: "11681",
            col3: "35487",
          },
          {
            col1: "285909",
            col2: "57176",
            col3: "35487.5",
          },
          {
            col1: "289417",
            col2: "3508",
            col3: "35489",
          },
          {
            col1: "319417",
            col2: "30000",
            col3: "35489.5",
          },
          {
            col1: "339417",
            col2: "20000",
            col3: "35490",
          },
          {
            col1: "341407",
            col2: "1990",
            col3: "35492.5",
          },
          {
            col1: "343908",
            col2: "2501",
            col3: "35493",
          },
          {
            col1: "353887",
            col2: "9979",
            col3: "35493.5",
          },
          {
            col1: "358342",
            col2: "4455",
            col3: "35496",
          },
        ],
      ],
      [
        [data, false],
        [
          {
            col1: "358342",
            col2: "2529",
            col3: "35473",
          },
          {
            col1: "355813",
            col2: "10029",
            col3: "35474",
          },
          {
            col1: "345784",
            col2: "1599",
            col3: "35475",
          },
          {
            col1: "344185",
            col2: "1200",
            col3: "35479",
          },
          {
            col1: "342985",
            col2: "5288",
            col3: "35479.5",
          },
          {
            col1: "337697",
            col2: "3458",
            col3: "35480.5",
          },
          {
            col1: "334239",
            col2: "7846",
            col3: "35481",
          },
          {
            col1: "326393",
            col2: "5000",
            col3: "35481.5",
          },
          {
            col1: "321393",
            col2: "450",
            col3: "35482",
          },
          {
            col1: "320943",
            col2: "978",
            col3: "35482.5",
          },
          {
            col1: "319965",
            col2: "3551",
            col3: "35483",
          },
          {
            col1: "316414",
            col2: "3383",
            col3: "35484",
          },
          {
            col1: "313031",
            col2: "10000",
            col3: "35484.5",
          },
          {
            col1: "303031",
            col2: "2011",
            col3: "35485",
          },
          {
            col1: "301020",
            col2: "1041",
            col3: "35485.5",
          },
          {
            col1: "299979",
            col2: "158689",
            col3: "35486.5",
          },
          {
            col1: "141290",
            col2: "11681",
            col3: "35487",
          },
          {
            col1: "129609",
            col2: "57176",
            col3: "35487.5",
          },
          {
            col1: "72433",
            col2: "3508",
            col3: "35489",
          },
          {
            col1: "68925",
            col2: "30000",
            col3: "35489.5",
          },
          {
            col1: "38925",
            col2: "20000",
            col3: "35490",
          },
          {
            col1: "18925",
            col2: "1990",
            col3: "35492.5",
          },
          {
            col1: "16935",
            col2: "2501",
            col3: "35493",
          },
          {
            col1: "14434",
            col2: "9979",
            col3: "35493.5",
          },
          {
            col1: "4455",
            col2: "4455",
            col3: "35496",
          },
        ],
      ],
    ])("formats data correctly", (input, expected) => {
      // @ts-ignore
      expect(dataToTableState(...input)).toStrictEqual(expected);
    });
  });

  describe("updateTableState()", () => {
    it.each([
      [[[], []], []],
      [[data, []], data],
      [
        [
          data,
          [
            [35473, 0],
            [35474, 0],
          ],
        ],
        [
          [35475, 1599],
          [35479, 1200],
          [35479.5, 5288],
          [35480.5, 3458],
          [35481, 7846],
          [35481.5, 5000],
          [35482, 450],
          [35482.5, 978],
          [35483, 3551],
          [35484, 3383],
          [35484.5, 10000],
          [35485, 2011],
          [35485.5, 1041],
          [35486.5, 158689],
          [35487, 11681],
          [35487.5, 57176],
          [35489, 3508],
          [35489.5, 30000],
          [35490, 20000],
          [35492.5, 1990],
          [35493, 2501],
          [35493.5, 9979],
          [35496, 4455],
        ],
      ],
      [
        [
          data,
          [
            [35473, 0],
            [35474, 0],
            [35472, 1000],
            [35482, 50],
          ],
        ],
        [
          [35482, 500],
          [35482.5, 978],
          [35472, 1000],
          [35485.5, 1041],
          [35479, 1200],
          [35475, 1599],
          [35492.5, 1990],
          [35485, 2011],
          [35493, 2501],
          [35484, 3383],
          [35480.5, 3458],
          [35489, 3508],
          [35483, 3551],
          [35496, 4455],
          [35481.5, 5000],
          [35479.5, 5288],
          [35481, 7846],
          [35493.5, 9979],
          [35484.5, 10000],
          [35487, 11681],
          [35490, 20000],
          [35489.5, 30000],
          [35487.5, 57176],
          [35486.5, 158689],
        ],
      ],
    ])("is updating state correctly", (input, expected) => {
      // @ts-ignore
      expect(updateTableState(...input)).toStrictEqual(expected);
    });
  });
});
